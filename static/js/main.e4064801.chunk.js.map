{"version":3,"sources":["components/User.js","App.js","components/helper/back-api-call.js","index.js"],"names":["User","className","src","this","props","user","avatar_url","width","height","alt","login","Component","App","searchUser","search","state","userList","regexp","RegExp","filter","item","test","loadAllUsers","fetch","method","then","response","json","catch","err","console","log","users","setState","suggestion","length","handleChange","event","searchText","target","value","setTimeout","type","placeholder","onChange","autoFocus","map","key","id","React","ReactDOM","render","document","getElementById"],"mappings":"4MAsBeA,E,uKAjBX,OACE,yBAAKC,UAAU,QACb,yBACEC,IAAKC,KAAKC,MAAMC,KAAKC,WACrBL,UAAU,aACVM,MAAM,OACNC,OAAO,OACPC,IAAI,qCAEN,yBAAKR,UAAU,aACb,wBAAIA,UAAU,cAAcE,KAAKC,MAAMC,KAAKK,a,GAZnCC,aCiGJC,E,kDA/Fb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAQRS,WAAa,SAACC,GACZ,GAAe,KAAXA,EACF,OAAO,EAAKC,MAAMC,SAEpB,IAAIC,EAAS,IAAIC,OAAJ,WAAeJ,GAAU,MACtC,OAAO,EAAKC,MAAMC,SAASG,QAAO,SAACC,GAAD,OAAUH,EAAOI,KAAKD,EAAKV,WAd5C,EAiBnBY,aAAe,WClBRC,MAAM,0CAAD,OAJG,uBAIH,0BAHO,4CAKjB,CACEC,OAAQ,QAGTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MDazBJ,MAAK,SAACO,GAEL,EAAKC,SAAS,CACZjB,SAAUgB,IAGyB,IAAjC,EAAKjB,MAAMmB,WAAWC,QACxB,EAAKF,SAAS,CAAEC,WAAYF,OAG/BJ,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OA7Bb,EAkDnBO,aAAe,SAACC,GACd,EAAKJ,SAAS,CACZK,WAAYD,EAAME,OAAOC,QAE3BC,YAAW,WACT,EAAKR,SAAS,CACZC,WAAY,EAAKrB,WAAW,EAAKE,MAAMuB,gBAGxC,KAzDH,EAAKvB,MAAQ,CACXuB,WAAY,GACZJ,WAAY,GACZlB,SAAU,IALK,E,gEA+DjBb,KAAKmB,iB,+BAIL,OACE,yBAAKrB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,0BAAMA,UAAU,cACd,2BACEA,UAAU,oBACVyC,KAAK,OACLC,YAAY,eACZH,MAAOrC,KAAKY,MAAMuB,WAClBM,SAAUzC,KAAKiC,aACfS,WAAS,MAId1C,KAAKY,MAAMmB,WAAWY,KAAI,SAACzC,GAC1B,OACE,yBAAK0C,IAAK1C,EAAK2C,GAAI/C,UAAU,2BAC3B,kBAAC,EAAD,CAAMI,KAAMA,c,GAtFV4C,IAAMtC,WEAxBuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e4064801.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nclass User extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <img\r\n          src={this.props.user.avatar_url}\r\n          className=\"card-image\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          alt=\"no avatar found for this profile\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title\">{this.props.user.login}</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { getAllGithubUsers } from \"./components/helper/back-api-call\";\r\nimport User from \"./components/User\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\",\r\n      suggestion: [],\r\n      userList: [],\r\n    };\r\n  }\r\n\r\n  searchUser = (search) => {\r\n    if (search === \"\") {\r\n      return this.state.userList;\r\n    }\r\n    let regexp = new RegExp(`^${search}`, \"gi\");\r\n    return this.state.userList.filter((item) => regexp.test(item.login));\r\n  };\r\n\r\n  loadAllUsers = () => {\r\n    getAllGithubUsers()\r\n      .then((users) => {\r\n        // console.log(\"users\" + users);\r\n        this.setState({\r\n          userList: users,\r\n        });\r\n        //* if suggestion is empty\r\n        if (this.state.suggestion.length === 0) {\r\n          this.setState({ suggestion: users });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // showSuggestedUser = (suggestion) => {\r\n  //   if (suggestion.length !== 0) {\r\n  //     this.setState({\r\n  //       userList: [\r\n  //         ...this.state.userList.filter((user) => {\r\n  //           for (let i in suggestion) {\r\n  //             if (suggestion[i].login === user.login) {\r\n  //               return user;\r\n  //             }\r\n  //           }\r\n  //         }),\r\n  //       ],\r\n  //     });\r\n  //   } else {\r\n  //     this.loadAllUsers();\r\n  //   }\r\n  // };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      searchText: event.target.value,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        suggestion: this.searchUser(this.state.searchText),\r\n      });\r\n      // this.showSuggestedUser(this.state.suggestion);\r\n    }, 50);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadAllUsers();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <form className=\"form-group\">\r\n              <input\r\n                className=\"form-control mt-2\"\r\n                type=\"text\"\r\n                placeholder=\"search users\"\r\n                value={this.state.searchText}\r\n                onChange={this.handleChange}\r\n                autoFocus\r\n              />\r\n            </form>\r\n          </div>\r\n          {this.state.suggestion.map((user) => {\r\n            return (\r\n              <div key={user.id} className=\"col-sm-4 col-md-3  mb-3\">\r\n                <User user={user} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const clientId = \"409c6363966a67f6971a\";\r\nconst clientSecret = \"ab0202e7f54611d68838e120c962e5ddfdecf6fb\";\r\n\r\nexport const getAllGithubUsers = () => {\r\n  return fetch(\r\n    `https://api.github.com/users?client_id=${clientId}&client_secret=${clientSecret}`,\r\n    {\r\n      method: \"GET\",\r\n    }\r\n  )\r\n    .then((response) => response.json())\r\n    .catch((err) => console.log(err));\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}